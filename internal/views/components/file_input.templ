// data_input
// https://daisyui.com/components/file-input
package components

import "fmt"

type FileInputProps struct {
	ID              string
	Type            string // defaults to "text"
	Label           string
	Name            string
	Value           string
	Placeholder     string
	Err             string
	Attrs           templ.Attributes
	Class           string
	Icon            templ.Component
	Disabled        bool
	DisabledMessage string
	Required        bool
}

templ FileInput(props FileInputProps) {
	<div
		hx-target={ fmt.Sprintf("#%s-error", props.Name) }
		hx-swap="outerHTML"
		class="w-full"
	>
		<label class="form-control w-full pb-2">
			if props.Label != "" {
				<div class="label pr-2">
					<span class="label-text">{ props.Label }</span>
				</div>
			}
			<div
				id={ props.Name + "-container" }
				class={
					"relative !px-0 bg-transparent w-full flex items-center flex-grow",
					templ.KV("!pl-3", props.Icon != nil),
				}
			>
				<input
					{ props.Attrs... }
					type="file"
					name={ props.Name }
					class={
						"w-full file-input",
						templ.KV("input-error", props.Err != ""),
						props.Class,
					}
					value={ props.Value }
				/>
				<script>
					document.addEventListener("htmx:afterRequest", (evt) => {
						let name = evt.detail.elt.getAttribute("name")
						let div = document.getElementById(name + "-div")
						if (div === null) {
							return
						}
						let inp = div.querySelector("input[name=" + name + "]")
						if (200 <= evt.detail.xhr.status && evt.detail.xhr.status < 300) {
							if (inp.classList.contains("input-error")) {
								inp.classList.toggle("input-error")
							}
						} else {
							if (!inp.classList.contains("input-error")) {
								inp.classList.toggle("input-error")
							}
						}
					})
				</script>
			</div>
		</label>
	</div>
}
