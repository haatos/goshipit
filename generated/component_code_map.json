{
  "actions": [
    {
      "name": "button",
      "code": "```go\ntype ButtonProps struct {\n\tLabel string\n\tClass string\n\tAttrs templ.Attributes\n}\n\ntempl Button(props ButtonProps) {\n\t\u003cbutton class={ \"btn\", props.Class } { props.Attrs... }\u003e\n\t\t{ props.Label }\n\t\u003c/button\u003e\n}\n```"
    },
    {
      "name": "dropdown",
      "code": "```go\ntype DropdownProps struct {\n\tLabel     string\n\tClass     string\n\tListClass string\n\tItems     []DropdownItem\n}\n\ntype DropdownItem struct {\n\tLabel string\n\tAttrs templ.Attributes\n}\n\ntempl Dropdown(props DropdownProps) {\n\t\u003cdetails class={ \"dropdown\", props.Class }\u003e\n\t\t\u003csummary class=\"btn m-1\"\u003e{ props.Label }\u003c/summary\u003e\n\t\t\u003cul class={ \"menu dropdown-content\", props.ListClass }\u003e\n\t\t\tfor _, di := range props.Items {\n\t\t\t\t\u003cli\u003e\u003ca { di.Attrs... }\u003e{ di.Label }\u003c/a\u003e\u003c/li\u003e\n\t\t\t}\n\t\t\u003c/ul\u003e\n\t\u003c/details\u003e\n}\n```",
      "daisy_ui_url": "https://daisyui.com/components/dropdown"
    },
    {
      "name": "modal",
      "code": "```go\ntype ModalProps struct {\n\tID    string\n\tLabel any\n}\n\ntempl Modal(props ModalProps) {\n\t@modalWrapper(\n\t\tprops,\n\t\ttempl.Attributes{\"onclick\": fmt.Sprintf(\"%s.showModal()\", props.ID)},\n\t) {\n\t\t{ children... }\n\t}\n}\n\ntempl modalWrapper(props ModalProps, attrs templ.Attributes) {\n\t// you can use a string or a templ.Component as the 'label'\n\t// of the modal button\n\tif s, ok := props.Label.(string); ok {\n\t\t\u003cdiv class=\"btn\" { attrs... }\u003e\n\t\t\t{ s }\n\t\t\u003c/div\u003e\n\t} else if c, ok := props.Label.(templ.Component); ok {\n\t\t@c\n\t}\n\t\u003cdialog id={ props.ID } class=\"modal\"\u003e\n\t\t\u003cdiv class=\"modal-box\"\u003e\n\t\t\t{ children... }\n\t\t\u003c/div\u003e\n\t\t\u003cform method=\"dialog\" class=\"modal-backdrop\"\u003e\n\t\t\t\u003cbutton\u003eclose\u003c/button\u003e\n\t\t\u003c/form\u003e\n\t\u003c/dialog\u003e\n}\n```",
      "daisy_ui_url": "https://daisyui.com/components/modal"
    },
    {
      "name": "swap",
      "code": "```go\ntype SwapProps struct {\n\tOn    templ.Component\n\tOff   templ.Component\n\tClass string\n}\n\ntempl Swap(props SwapProps) {\n\t\u003clabel class={ \"swap\", props.Class }\u003e\n\t\t\u003cinput type=\"checkbox\"/\u003e\n\t\t\u003cdiv class=\"swap-on\"\u003e\n\t\t\t@props.On\n\t\t\u003c/div\u003e\n\t\t\u003cdiv class=\"swap-off\"\u003e\n\t\t\t@props.Off\n\t\t\u003c/div\u003e\n\t\u003c/label\u003e\n}\n```",
      "daisy_ui_url": "https://daisyui.com/components/swap"
    }
  ],
  "data_display": [
    {
      "name": "accordion",
      "code": "```go\ntype AccordionRowProps struct {\n\tLabel string\n\tType  string\n\tName  string\n}\n\ntempl AccordionRow(props AccordionRowProps) {\n\t\u003cdiv class=\"collapse collapse-arrow bg-base-300 join-item\"\u003e\n\t\t\u003cinput\n\t\t\tif props.Type == \"\" {\n\t\t\t\ttype=\"checkbox\"\n\t\t\t} else {\n\t\t\t\ttype={ props.Type }\n\t\t\t}\n\t\t\tname={ props.Name }\n\t\t/\u003e\n\t\t\u003cdiv class=\"collapse-title text-xl font-medium\"\u003e{ props.Label }\u003c/div\u003e\n\t\t\u003cdiv class=\"collapse-content bg-base-200\"\u003e\n\t\t\t{ children... }\n\t\t\u003c/div\u003e\n\t\u003c/div\u003e\n}\n```",
      "daisy_ui_url": "https://daisyui.com/components/accordion"
    },
    {
      "name": "active_search",
      "code": "```go\ntype ActiveSearchInputProps struct {\n\tID     string\n\tURL    string\n\tTarget string\n\tInput  InputProps\n}\n\ntempl ActiveSearchInput(props ActiveSearchInputProps) {\n\t\u003cdiv class=\"w-full flex space-x-2 items-center\"\u003e\n\t\t\u003cdiv class=\"w-full max-w-xs\"\u003e\n\t\t\t@Form(\n\t\t\t\ttempl.Attributes{\n\t\t\t\t\t\"id\":           props.ID,\n\t\t\t\t\t\"hx-get\":       props.URL,\n\t\t\t\t\t\"hx-target\":    props.Target,\n\t\t\t\t\t\"hx-swap\":      \"innerHTML\",\n\t\t\t\t\t\"hx-trigger\":   fmt.Sprintf(\"keyup from:input[name=%s] delay:500ms, search\", props.Input.Name),\n\t\t\t\t\t\"hx-indicator\": fmt.Sprintf(\"#%s\", props.ID),\n\t\t\t\t},\n\t\t\t) {\n\t\t\t\t@Input(props.Input)\n\t\t\t}\n\t\t\u003c/div\u003e\n\t\t\u003cdiv class=\"flex justify-center items-center\"\u003e\n\t\t\t\u003cspan id={ props.ID } class=\"htmx-indicator loading loading-spinner\"\u003e\u003c/span\u003e\n\t\t\u003c/div\u003e\n\t\u003c/div\u003e\n}\n```"
    },
    {
      "name": "avatar",
      "code": "```go\ntype AvatarProps struct {\n\tAvatarClass      string\n\tContainerClass   string\n\tSource           string\n\tPlaceholder      string\n\tPlaceholderClass string\n}\n\ntempl Avatar(props AvatarProps) {\n\t\u003cdiv class={ \"avatar\", props.AvatarClass }\u003e\n\t\t\u003cdiv class={ props.ContainerClass }\u003e\n\t\t\t\u003cimg src={ props.Source }/\u003e\n\t\t\tif props.Placeholder != \"\" {\n\t\t\t\t\u003cspan class={ props.PlaceholderClass }\u003e{ props.Placeholder }\u003c/span\u003e\n\t\t\t}\n\t\t\u003c/div\u003e\n\t\u003c/div\u003e\n}\n\ntempl AvatarGroup(class string) {\n\t\u003cdiv class={ \"avatar-group rtl:space-x-reverse\", class }\u003e\n\t\t{ children... }\n\t\u003c/div\u003e\n}\n```",
      "daisy_ui_url": "https://daisyui.com/components/avatar"
    },
    {
      "name": "card",
      "code": "```go\ntype CardProps struct {\n\tTitle   string\n\tContent string\n\tSource  string\n\tAlt     string\n\tClass   string\n}\n\ntempl Card(props CardProps) {\n\t\u003cdiv class={ \"card\", props.Class }\u003e\n\t\tif props.Source != \"\" {\n\t\t\t\u003cfigure\u003e\n\t\t\t\t\u003cimg src={ props.Source } alt={ props.Alt }/\u003e\n\t\t\t\u003c/figure\u003e\n\t\t}\n\t\t\u003cdiv class=\"card-body\"\u003e\n\t\t\t\u003ch2 class=\"card-title\"\u003e{ props.Title }\u003c/h2\u003e\n\t\t\t\u003cp\u003e{ props.Content }\u003c/p\u003e\n\t\t\t\u003cdiv class=\"card-actions justify-end\"\u003e\n\t\t\t\t{ children... }\n\t\t\t\u003c/div\u003e\n\t\t\u003c/div\u003e\n\t\u003c/div\u003e\n}\n```",
      "daisy_ui_url": "https://daisyui.com/components/card"
    },
    {
      "name": "carousel",
      "code": "```go\ntype CarouselProps []CarouselProp\n\ntype CarouselProp struct {\n\tSource string\n\tAlt    string\n}\n\ntempl Carousel(props CarouselProps) {\n\t\u003cdiv class=\"carousel carousel-center rounded-box\"\u003e\n\t\tfor _, prop := range props {\n\t\t\t\u003cdiv class=\"carousel-item [\u0026:not(:last-child)]:border-r border-r-base-300\"\u003e\n\t\t\t\t\u003cimg class=\"max-w-xs\" src={ prop.Source } alt={ prop.Alt }/\u003e\n\t\t\t\u003c/div\u003e\n\t\t}\n\t\u003c/div\u003e\n}\n```",
      "daisy_ui_url": "https://daisyui.com/components/carousel"
    },
    {
      "name": "chat",
      "code": "```go\ntype ChatProps []ChatMessageProps\n\ntype ChatMessageProps struct {\n\tAvatarURL string\n\tSender    string\n\tTime      string\n\tMessage   string\n\tFooter    string\n\tLocation  string\n\tClass     string\n}\n\ntempl Chat(props ChatProps) {\n\tfor _, prop := range props {\n\t\t@ChatMessage(prop)\n\t}\n}\n\ntempl ChatMessage(props ChatMessageProps) {\n\t\u003cdiv\n\t\tclass={\n\t\t\t\"chat\",\n\t\t\ttempl.KV(\"chat-start\", props.Location == \"start\"),\n\t\t\ttempl.KV(\"chat-end\", props.Location == \"end\"),\n\t\t}\n\t\u003e\n\t\tif props.AvatarURL != \"\" {\n\t\t\t@Avatar(AvatarProps{ContainerClass: \"chat-image w-10 rounded-full\", Source: props.AvatarURL})\n\t\t}\n\t\t\u003cdiv class=\"chat-header\"\u003e\n\t\t\t{ props.Sender }\n\t\t\t\u003ctime class=\"text-xs opacity-50\"\u003e{ props.Time }\u003c/time\u003e\n\t\t\u003c/div\u003e\n\t\t\u003cdiv class={ \"chat-bubble\", props.Class }\u003e\n\t\t\t{ props.Message }\n\t\t\u003c/div\u003e\n\t\t\u003cdiv class=\"chat-footer\"\u003e\n\t\t\t{ props.Footer }\n\t\t\u003c/div\u003e\n\t\u003c/div\u003e\n}\n```",
      "daisy_ui_url": "https://daisyui.com/components/chat"
    },
    {
      "name": "collapse",
      "code": "```go\ntype CollapseProps struct {\n\tClass        string\n\tTitle        string\n\tTitleClass   string\n\tContentClass string\n}\n\ntempl Collapse(props CollapseProps) {\n\t\u003cdiv\n\t\ttabindex=\"0\"\n\t\tclass={ \"collapse\", props.Class }\n\t\u003e\n\t\t\u003cinput type=\"checkbox\"/\u003e\n\t\t\u003cdiv class={ \"collapse-title\", props.TitleClass }\u003e\n\t\t\t{ props.Title }\n\t\t\u003c/div\u003e\n\t\t\u003cdiv class={ \"collapse-content\", props.ContentClass }\u003e\n\t\t\t{ children... }\n\t\t\u003c/div\u003e\n\t\u003c/div\u003e\n}\n```",
      "daisy_ui_url": "https://daisyui.com/components/collapse"
    },
    {
      "name": "countdown",
      "code": "```go\ntempl Countdown(expires time.Time) {\n\t\u003cdiv\n\t\tclass=\"flex items-center space-x-1\"\n\t\tx-cloak\n\t\tx-data={ fmt.Sprintf(\"countdownTimer(new Date(\\\"%s\\\"))\", expires.Format(\"2006-01-02T15:04:05Z\")) }\n\t\tx-init=\"initCountdownTimer();\"\n\t\thx-get=\"/\"\n\t\thx-trigger=\"countdownExpired from:body\"\n\t\u003e\n\t\t@countDownItem(\"time().days\", \"days\")\n\t\t@countDownItem(\"time().hours\", \"hours\")\n\t\t@countDownItem(\"time().minutes\", \"min\")\n\t\t@countDownItem(\"time().seconds\", \"sec\")\n\t\u003c/div\u003e\n\t\u003cscript\u003e\n\t\tfunction countdownTimer(expiry) {\n\t\t\treturn {\n\t\t\t\texpiry: expiry,\n\t\t\t\tremaining:null,\n\t\t\t\tinitCountdownTimer() {\n\t\t\t\t\tthis.setCountdownTimerRemaining()\n\t\t\t\t\tthis.intervalId = setInterval(() =\u003e {\n\t\t\t\t\t\tthis.setCountdownTimerRemaining();\n\t\t\t\t\t}, 1000);\n\t\t\t\t},\n\t\t\t\tsetCountdownTimerRemaining() {\n\t\t\t\t\tconst diff = this.expiry - new Date().getTime();\n\t\t\t\t\tthis.remaining =  parseInt(diff / 1000);\n\t\t\t\t\tlet now = this.time()\n\t\t\t\t\tif (now.days === \"00\" \u0026\u0026 now.hours === \"00\" \u0026\u0026 now.minutes === \"00\" \u0026\u0026 now.seconds === \"00\") {\n\t\t\t\t\t\tclearInterval(this.intervalId)\n\t\t\t\t\t\tlet body = document.querySelector(\"body\")\n\t\t\t\t\t\tbody.dispatchEvent(new Event(\"countdownExpired\"))\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tcountdownTimerDays() {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tvalue:this.remaining / 86400,\n\t\t\t\t\t\tremaining:this.remaining % 86400\n\t\t\t\t\t};\n\t\t\t\t},\n\t\t\t\tcountdownTimerHours() {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tvalue:this.countdownTimerDays().remaining / 3600,\n\t\t\t\t\t\tremaining:this.countdownTimerDays().remaining % 3600\n\t\t\t\t\t};\n\t\t\t\t},\n\t\t\t\tcountdownTimerMinutes() {\n\t\t\t\t\treturn {\n\t\t\t\t\tvalue:this.countdownTimerHours().remaining / 60,\n\t\t\t\t\tremaining:this.countdownTimerHours().remaining % 60\n\t\t\t\t};\n\t\t\t\t},\n\t\t\t\tcountdownTimerSeconds() {\n\t\t\t\t\treturn {\n\t\t\t\t\tvalue:this.countdownTimerMinutes().remaining,\n\t\t\t\t};\n\t\t\t\t},\n\t\t\t\tformat(value) {\n\t\t\t\t\treturn (\"0\" + parseInt(value)).slice(-2)\n\t\t\t\t},\n\t\t\t\ttime() {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdays:this.format(this.countdownTimerDays().value),\n\t\t\t\t\t\thours:this.format(this.countdownTimerHours().value),\n\t\t\t\t\t\tminutes:this.format(this.countdownTimerMinutes().value),\n\t\t\t\t\t\tseconds:this.format(this.countdownTimerSeconds().value),\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t}\n\t\t}\n\t\u003c/script\u003e\n\t\u003cscript src=\"/static/js/alpine.js\" defer\u003e\u003c/script\u003e\n}\n\ntempl countDownItem(xText, label string) {\n\t\u003cdiv\n\t\tclass={\n\t\t\t\"flex flex-col justify-center items-center\",\n\t\t\t\"w-16 h-20 rounded-box bg-base-content text-base-300\",\n\t\t}\n\t\u003e\n\t\t\u003cp class=\"text-5xl font-mono\" x-text={ xText }\u003e\u003c/p\u003e\n\t\t\u003cp\u003e{ label }\u003c/p\u003e\n\t\u003c/div\u003e\n}\n```"
    },
    {
      "name": "diff",
      "code": "```go\ntype DiffProps struct {\n\tWidth  int\n\tHeight int\n\tImage1 DiffImage\n\tImage2 DiffImage\n}\n\ntype DiffImage struct {\n\tSource string\n\tAlt    string\n}\n\ntempl Diff(props DiffProps) {\n\t\u003cdiv class={ \"diff\", fmt.Sprintf(\"aspect-[%d/%d]\", props.Width, props.Height) }\u003e\n\t\t\u003cdiv class=\"diff-item-1\"\u003e\n\t\t\t\u003cimg alt={ props.Image1.Alt } src={ props.Image1.Source }/\u003e\n\t\t\u003c/div\u003e\n\t\t\u003cdiv class=\"diff-item-2\"\u003e\n\t\t\t\u003cimg alt={ props.Image2.Alt } src={ props.Image2.Source }/\u003e\n\t\t\u003c/div\u003e\n\t\t\u003cdiv class=\"diff-resizer\"\u003e\u003c/div\u003e\n\t\u003c/div\u003e\n}\n```",
      "daisy_ui_url": "https://daisyui.com/components/diff"
    },
    {
      "name": "features",
      "code": "```go\ntype FeaturesProps struct {\n\tTitle    string\n\tFeatures []FeatureProps\n}\n\ntype FeatureProps struct {\n\tIcon        templ.Component\n\tTitle       string\n\tDescription string\n\tURL         string\n}\n\ntempl Features(props FeaturesProps) {\n\t\u003cdiv class=\"py-12 px-4\"\u003e\n\t\t\u003cdiv class=\"max-w-screen-xl mx-auto text-base-content/80\"\u003e\n\t\t\tif props.Title != \"\" {\n\t\t\t\t\u003ch2 class=\"sm:text-4xl text-2xl font-bold text-center mb-16\"\u003e{ props.Title }\u003c/h2\u003e\n\t\t\t}\n\t\t\t\u003cdiv class=\"grid lg:grid-cols-3 md:grid-cols-2 gap-12 max-md:max-w-lg mx-auto\"\u003e\n\t\t\t\tfor _, feature := range props.Features {\n\t\t\t\t\t@Feature(feature)\n\t\t\t\t}\n\t\t\t\u003c/div\u003e\n\t\t\u003c/div\u003e\n\t\u003c/div\u003e\n}\n\ntempl Feature(feature FeatureProps) {\n\t\u003cdiv\n\t\tclass={\n\t\t\t\"flex flex-col justify-between items-center rounded-box group p-8 text-center\",\n\t\t\t\"hover:bg-base-300 hover:text-base-content hover:shadow-xl transition-all duration-300\",\n\t\t}\n\t\u003e\n\t\t@feature.Icon\n\t\tif feature.Title != \"\" {\n\t\t\t\u003ch3 class=\"text-xl font-semibold mb-3\"\u003e{ feature.Title }\u003c/h3\u003e\n\t\t}\n\t\t\u003cp class=\"text-neutral group-hover:text-base-content text-sm\"\u003e{ feature.Description }\u003c/p\u003e\n\t\tif feature.URL != \"\" {\n\t\t\t\u003ca href={ templ.SafeURL(feature.URL) } class=\"mt-2 link link-primary\"\u003eLearn more\u003c/a\u003e\n\t\t}\n\t\u003c/div\u003e\n}\n```"
    },
    {
      "name": "infinite_scroll",
      "code": "```go\ntempl InfiniteScrollTable(rows []templ.Component) {\n\t@Table(\n\t\t[]templ.Component{PlainText(\"Name\"), PlainText(\"Email\")},\n\t\trows,\n\t\tnil,\n\t)\n\t\u003cdiv class=\"flex justify-center\"\u003e\u003cspan id=\"spinner\" class=\"htmx-indicator loading loading-spinner\"\u003e\u003c/span\u003e\u003c/div\u003e\n}\n\ntempl InfiniteScrollRows(rows []templ.Component) {\n\tfor _, r := range rows {\n\t\t@r\n\t}\n}\n\ntempl InfiniteScrollRow(name, email string, page int, hasMore bool) {\n\t\u003ctr\n\t\tif hasMore {\n\t\t\thx-get={ fmt.Sprintf(\"/infinite-scroll-rows?page=%d\", page+1) }\n\t\t\thx-target=\"this\"\n\t\t\thx-trigger=\"intersect once\"\n\t\t\thx-swap=\"afterend\"\n\t\t\thx-indicator=\"#spinner\"\n\t\t}\n\t\u003e\n\t\t\u003ctd\u003e{ name }\u003c/td\u003e\n\t\t\u003ctd\u003e{ email }\u003c/td\u003e\n\t\u003c/tr\u003e\n}\n```"
    },
    {
      "name": "join",
      "code": "```go\ntempl Join(components []templ.Component) {\n\t\u003cdiv class=\"join\"\u003e\n\t\tfor _, c := range components {\n\t\t\t\u003cdiv class=\"join-item\"\u003e\n\t\t\t\t@c\n\t\t\t\u003c/div\u003e\n\t\t}\n\t\u003c/div\u003e\n}\n```",
      "daisy_ui_url": "https://daisyui.com/components/join"
    },
    {
      "name": "lazy_load",
      "code": "```go\ntempl LazyLoad(url string) {\n\t\u003cdiv\n\t\thx-get={ url }\n\t\thx-trigger=\"load\"\n\t\thx-target=\"this\"\n\t\tclass=\"flex justify-center items-center py-8\"\n\t\u003e\n\t\t\u003cspan class=\"loading loading-spinner\"\u003e\u003c/span\u003e\n\t\u003c/div\u003e\n}\n```"
    },
    {
      "name": "pricing",
      "code": "```go\ntype PricingProps []PriceProps\n\ntype PriceProps struct {\n\tTitle            string\n\tDescription      string\n\tPrice            string\n\tPer              string\n\tIncludedFeatures []string\n\tExcludedFeatures []string\n\tCallToAction     ButtonProps\n\tFooter           templ.Component\n}\n\ntempl Pricing(checked bool, props PricingProps) {\n\t\u003cdiv class=\"w-full mx-auto py-8 max-w-screen-md\"\u003e\n\t\t\u003cdiv class=\"max-w-xs mx-auto\"\u003e\n\t\t\t@Toggle(ToggleProps{\n\t\t\t\tBefore:    \"Paid monthly\",\n\t\t\t\tAfter:     \"Paid annually\",\n\t\t\t\tName:      \"period\",\n\t\t\t\tChecked:   checked,\n\t\t\t\tHighlight: true,\n\t\t\t\tAttrs: templ.Attributes{\n\t\t\t\t\t\"hx-get\":    \"/pricing\",\n\t\t\t\t\t\"hx-target\": \"#price-grid\",\n\t\t\t\t\t\"hx-swap\":   \"outerHTML\",\n\t\t\t\t},\n\t\t\t})\n\t\t\u003c/div\u003e\n\t\t@PriceGrid(props)\n\t\u003c/div\u003e\n}\n\ntempl PriceGrid(prices PricingProps) {\n\t\u003cdiv\n\t\tid=\"price-grid\"\n\t\tclass=\"grid grid-cols-1 md:grid-cols-3 px-4 pt-4 gap-4 w-full mx-auto\"\n\t\u003e\n\t\tfor i := range prices {\n\t\t\t@Price(prices[i], nil)\n\t\t}\n\t\u003c/div\u003e\n}\n\ntempl Price(price PriceProps, footer templ.Component) {\n\t\u003cdiv class=\"card ring-1 ring-base-content/60 rounded-box w-full max-w-xs p-6 space-y-8 mx-auto\"\u003e\n\t\t\u003cdiv class=\"card-title text-3xl\"\u003e\u003ch2 class=\"mx-auto\"\u003e{ price.Title }\u003c/h2\u003e\u003c/div\u003e\n\t\t\u003cp class=\"text-center text-3xl font-bold\"\u003e{ price.Price } \u003cspan class=\"text-xs font-normal\"\u003e{ price.Per }\u003c/span\u003e\u003c/p\u003e\n\t\t\u003cbutton { price.CallToAction.Attrs... }\u003e\n\t\t\t{ price.CallToAction.Label }\n\t\t\u003c/button\u003e\n\t\t\u003cdiv class=\"text-sm\"\u003e\n\t\t\t\u003cul class=\"space-y-4\"\u003e\n\t\t\t\tfor i := range price.IncludedFeatures {\n\t\t\t\t\t\u003cli class=\"flex items-center space-x-2\"\u003e\n\t\t\t\t\t\t\u003csvg class=\"w-4 h-4\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\"\u003e\n\t\t\t\t\t\t\t\u003cpath class=\"fill-base-content\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M21.5821 5.54289C21.9726 5.93342 21.9726 6.56658 21.5821 6.95711L10.2526 18.2867C9.86452 18.6747 9.23627 18.6775 8.84475 18.293L2.29929 11.8644C1.90527 11.4774 1.89956 10.8443 2.28655 10.4503C2.67354 10.0562 3.30668 10.0505 3.70071 10.4375L9.53911 16.1717L20.1679 5.54289C20.5584 5.15237 21.1916 5.15237 21.5821 5.54289Z\"\u003e\u003c/path\u003e\n\t\t\t\t\t\t\u003c/svg\u003e\n\t\t\t\t\t\t\u003cspan\u003e{ price.IncludedFeatures[i] }\u003c/span\u003e\n\t\t\t\t\t\u003c/li\u003e\n\t\t\t\t}\n\t\t\t\u003c/ul\u003e\n\t\t\tif len(price.ExcludedFeatures) \u003e 0 {\n\t\t\t\t\u003cdiv class=\"divider !my-2\"\u003e\u003c/div\u003e\n\t\t\t}\n\t\t\t\u003cul class=\"space-y-4\"\u003e\n\t\t\t\tfor i := range price.ExcludedFeatures {\n\t\t\t\t\t\u003cli class=\"flex items-center space-x-2 pl-6\"\u003e\n\t\t\t\t\t\t\u003cspan class=\"text-base-content/50\"\u003e{ price.ExcludedFeatures[i] }\u003c/span\u003e\n\t\t\t\t\t\u003c/li\u003e\n\t\t\t\t}\n\t\t\t\u003c/ul\u003e\n\t\t\u003c/div\u003e\n\t\tif footer != nil {\n\t\t\t@footer\n\t\t}\n\t\u003c/div\u003e\n}\n```"
    },
    {
      "name": "stack",
      "code": "```go\ntempl Stack() {\n\t\u003cdiv class=\"stack\"\u003e\n\t\t{ children... }\n\t\u003c/div\u003e\n}\n```",
      "daisy_ui_url": "https://daisyui.com/components/stack"
    },
    {
      "name": "stats",
      "code": "```go\ntype StatProps struct {\n\tTitle       string\n\tValue       string\n\tDescription string\n}\n\ntempl Stats() {\n\t\u003cdiv class=\"stats stats-horizontal shadow\"\u003e\n\t\t{ children... }\n\t\u003c/div\u003e\n}\n\ntempl Stat(props StatProps) {\n\t\u003cdiv class=\"stat\"\u003e\n\t\t\u003cdiv class=\"stat-title\"\u003e{ props.Title }\u003c/div\u003e\n\t\t\u003cdiv class=\"stat-value\"\u003e{ props.Value }\u003c/div\u003e\n\t\tif props.Description != \"\" {\n\t\t\t\u003cdiv class=\"stat-desc\"\u003e{ props.Description }\u003c/div\u003e\n\t\t}\n\t\t\u003cdiv class=\"stat-actions\"\u003e\n\t\t\t{ children... }\n\t\t\u003c/div\u003e\n\t\u003c/div\u003e\n}\n```",
      "daisy_ui_url": "https://daisyui.com/components/stat"
    },
    {
      "name": "table",
      "code": "```go\ntempl Table(headers []templ.Component, rows []templ.Component, attrs templ.Attributes) {\n\t\u003cdiv class=\"overflow-x-auto\"\u003e\n\t\t\u003ctable { attrs... } class=\"table\"\u003e\n\t\t\t\u003cthead\u003e\n\t\t\t\t\u003ctr\u003e\n\t\t\t\t\tfor _, header := range headers {\n\t\t\t\t\t\t\u003cth\u003e\n\t\t\t\t\t\t\t@header\n\t\t\t\t\t\t\u003c/th\u003e\n\t\t\t\t\t}\n\t\t\t\t\u003c/tr\u003e\n\t\t\t\u003c/thead\u003e\n\t\t\t\u003ctbody\u003e\n\t\t\t\tfor _, trow := range rows {\n\t\t\t\t\t@trow\n\t\t\t\t}\n\t\t\t\u003c/tbody\u003e\n\t\t\u003c/table\u003e\n\t\u003c/div\u003e\n}\n\n// Component to use as plain text when\n// templ.Component is used as argument\ntempl PlainText(content string) {\n\t{ content }\n}\n```",
      "daisy_ui_url": "https://daisyui.com/components/table"
    },
    {
      "name": "testimonial",
      "code": "```go\ntype TestimonialProps []TestimonialProp\n\ntype TestimonialProp struct {\n\tAvatar  templ.Component\n\tName    string\n\tRating  int\n\tContent string\n}\n\ntempl TestimonialGrid(title string, props TestimonialProps) {\n\t\u003csection\u003e\n\t\t\u003cdiv class=\"mx-auto max-w-screen-xl px-4 py-12 sm:px-6 lg:px-8 lg:py-16\"\u003e\n\t\t\t\u003ch2 class=\"text-center text-4xl font-bold tracking-tight sm:text-5xl\"\u003e\n\t\t\t\t{ title }\n\t\t\t\u003c/h2\u003e\n\t\t\t\u003cdiv class=\"mt-8 [column-fill:_balance] sm:columns-2 sm:gap-6 lg:columns-3 lg:gap-8\"\u003e\n\t\t\t\tfor i := range props {\n\t\t\t\t\t\u003cdiv class=\"mb-8 sm:break-inside-avoid\"\u003e\n\t\t\t\t\t\t\u003cblockquote class=\"rounded-lg bg-base-300 p-6 shadow-sm sm:p-8\"\u003e\n\t\t\t\t\t\t\t\u003cdiv class=\"flex items-center gap-4\"\u003e\n\t\t\t\t\t\t\t\tif props[i].Avatar != nil {\n\t\t\t\t\t\t\t\t\t@props[i].Avatar\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\u003cdiv\u003e\n\t\t\t\t\t\t\t\t\t@RatingDisplay(RatingProps{\n\t\t\t\t\t\t\t\t\t\tName:  fmt.Sprintf(\"review-rating-%d\", i),\n\t\t\t\t\t\t\t\t\t\tMin:   1,\n\t\t\t\t\t\t\t\t\t\tMax:   5,\n\t\t\t\t\t\t\t\t\t\tValue: props[i].Rating,\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\u003cp class=\"mt-0.5 text-lg font-medium\"\u003e{ props[i].Name }\u003c/p\u003e\n\t\t\t\t\t\t\t\t\u003c/div\u003e\n\t\t\t\t\t\t\t\u003c/div\u003e\n\t\t\t\t\t\t\t\u003cp class=\"mt-4\"\u003e\n\t\t\t\t\t\t\t\t{ props[i].Content }\n\t\t\t\t\t\t\t\u003c/p\u003e\n\t\t\t\t\t\t\u003c/blockquote\u003e\n\t\t\t\t\t\u003c/div\u003e\n\t\t\t\t}\n\t\t\t\u003c/div\u003e\n\t\t\u003c/div\u003e\n\t\u003c/section\u003e\n}\n```"
    },
    {
      "name": "timeline",
      "code": "```go\ntype TimelineProps []TimelineProp\n\ntype TimelineProp struct {\n\tStart  string\n\tMiddle templ.Component\n\tEnd    string\n}\n\ntempl Timeline(props TimelineProps) {\n\t\u003cul class=\"timeline\"\u003e\n\t\tfor i, prop := range props {\n\t\t\t\u003cli\u003e\n\t\t\t\tif i \u003e 0 {\n\t\t\t\t\t\u003chr/\u003e\n\t\t\t\t}\n\t\t\t\tif prop.Start != \"\" {\n\t\t\t\t\t\u003cdiv class=\"timeline-start\"\u003e{ prop.Start }\u003c/div\u003e\n\t\t\t\t}\n\t\t\t\tif prop.Middle != nil {\n\t\t\t\t\t\u003cdiv class=\"timeline-middle\"\u003e\n\t\t\t\t\t\t@prop.Middle\n\t\t\t\t\t\u003c/div\u003e\n\t\t\t\t}\n\t\t\t\tif prop.End != \"\" {\n\t\t\t\t\t\u003cdiv class=\"timeline-end\"\u003e{ prop.End }\u003c/div\u003e\n\t\t\t\t}\n\t\t\t\tif i \u003c len(props) - 1 {\n\t\t\t\t\t\u003chr/\u003e\n\t\t\t\t}\n\t\t\t\u003c/li\u003e\n\t\t}\n\t\u003c/ul\u003e\n}\n\ntempl TimelineCheckbox(checked bool) {\n\t\u003csvg\n\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\tviewBox=\"0 0 20 20\"\n\t\tfill=\"currentColor\"\n\t\tclass={ \"h-5 w-5\", templ.KV(\"fill-primary\", checked) }\n\t\u003e\n\t\t\u003cpath\n\t\t\tfill-rule=\"evenodd\"\n\t\t\td=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.857-9.809a.75.75 0 00-1.214-.882l-3.483 4.79-1.88-1.88a.75.75 0 10-1.06 1.061l2.5 2.5a.75.75 0 001.137-.089l4-5.5z\"\n\t\t\tclip-rule=\"evenodd\"\n\t\t\u003e\u003c/path\u003e\n\t\u003c/svg\u003e\n}\n```",
      "daisy_ui_url": "https://daisyui.com/components/timeline"
    }
  ],
  "data_input": [
    {
      "name": "checkbox",
      "code": "```go\ntype CheckboxProps struct {\n\tID      string\n\tBefore  string\n\tAfter   string\n\tName    string\n\tChecked bool\n\tClass   string\n\tAttrs   templ.Attributes\n}\n\ntempl Checkbox(props CheckboxProps) {\n\t\u003clabel class=\"label justify-center cursor-pointer space-x-4\"\u003e\n\t\tif props.Before != \"\" {\n\t\t\t\u003cspan class=\"label-text\"\u003e\n\t\t\t\t{ props.Before }\n\t\t\t\u003c/span\u003e\n\t\t}\n\t\t\u003cinput\n\t\t\t{ props.Attrs... }\n\t\t\tif props.ID != \"\" {\n\t\t\t\tid={ props.ID }\n\t\t\t}\n\t\t\ttype=\"checkbox\"\n\t\t\tname={ props.Name }\n\t\t\tif props.Checked {\n\t\t\t\tchecked=\"checked\"\n\t\t\t}\n\t\t\tclass={ \"checkbox\", props.Class }\n\t\t/\u003e\n\t\tif props.After != \"\" {\n\t\t\t\u003cspan class=\"label-text\"\u003e\n\t\t\t\t{ props.After }\n\t\t\t\u003c/span\u003e\n\t\t}\n\t\u003c/label\u003e\n}\n```",
      "daisy_ui_url": "https://daisyui.com/components/checkbox"
    },
    {
      "name": "combobox",
      "code": "```go\ntype ComboboxProps struct {\n\tLabel    string\n\tName     string\n\tURL      string\n\tOptions  []string\n\tSelected []string\n}\n\ntempl Combobox(props ComboboxProps) {\n\t\u003cdetails class=\"dropdown w-full max-w-md min-h-8\"\u003e\n\t\t\u003csummary\n\t\t\tclass={\n\t\t\t\t\"cursor-pointer flex space-x-2 w-full rounded-box\",\n\t\t\t\t\"border border-base-content py-1 px-2\",\n\t\t\t}\n\t\t\u003e\n\t\t\t\u003cspan class=\"text-sm text-nowrap\"\u003e{ props.Label }\u003c/span\u003e\n\t\t\t\u003cdiv class=\"w-full flex items-center space-x-1\"\u003e\n\t\t\t\t\u003cdiv\n\t\t\t\t\tid={ fmt.Sprintf(\"%s_selections\", props.Name) }\n\t\t\t\t\tclass=\"w-full grid-flow-col-dense\"\n\t\t\t\t\u003e\n\t\t\t\t\tfor _, s := range props.Selected {\n\t\t\t\t\t\t@ComboBadge(props.Name, s)\n\t\t\t\t\t}\n\t\t\t\t\u003c/div\u003e\n\t\t\t\u003c/div\u003e\n\t\t\u003c/summary\u003e\n\t\t\u003cul class=\"menu dropdown-content bg-base-200 rounded-box z-50 p-2 shadow\"\u003e\n\t\t\tfor _, opt := range props.Options {\n\t\t\t\t\u003cli\u003e\n\t\t\t\t\t\u003clabel class=\"label cursor-pointer space-x-2\"\u003e\n\t\t\t\t\t\t\u003cspan class=\"label-text\"\u003e\n\t\t\t\t\t\t\t{ opt }\n\t\t\t\t\t\t\u003c/span\u003e\n\t\t\t\t\t\t\u003cinput\n\t\t\t\t\t\t\thx-post={ fmt.Sprintf(props.URL, props.Name, url.PathEscape(opt)) }\n\t\t\t\t\t\t\thx-target={ fmt.Sprintf(\"#%s_selections\", props.Name) }\n\t\t\t\t\t\t\thx-swap=\"beforeend\"\n\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\tname={ props.Name }\n\t\t\t\t\t\t\tclass={ \"checkbox\" }\n\t\t\t\t\t\t/\u003e\n\t\t\t\t\t\u003c/label\u003e\n\t\t\t\t\u003c/li\u003e\n\t\t\t}\n\t\t\u003c/ul\u003e\n\t\t\u003cscript data-checkbox-name={ props.Name } type=\"text/javascript\"\u003e\n\t\t\tvar name = document.currentScript.getAttribute(\"data-checkbox-name\");\n\t\t\t((name) =\u003e {\n\t\t\t\tdocument.addEventListener(\"htmx:configRequest\", (evt) =\u003e {\n\t\t\t\t\tif (evt.target.getAttribute(\"name\") === name \u0026\u0026 !evt.target.checked) {\n\t\t\t\t\t\t// prevent htmx request when checkbox is unchecked\n\t\t\t\t\t\tevt.preventDefault()\n\n\t\t\t\t\t\t// remove from selected elements\n\t\t\t\t\t\tlet label = evt.target.closest(\"label\")\n\t\t\t\t\t\tif (label !== null \u0026\u0026 label !== undefined) {\n\t\t\t\t\t\t\tlet span = label.querySelector(\"span.label-text\")\n\t\t\t\t\t\t\tlet value = span.innerText\n\t\t\t\t\t\t\tlet input = document.querySelector(`input[value=\"${value}\"]`)\n\t\t\t\t\t\t\tif (input.getAttribute(\"name\") === name) {\n\t\t\t\t\t\t\t\tinput.closest(\"div\").remove()\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t})(name);\n\t\t\u003c/script\u003e\n\t\u003c/details\u003e\n}\n\ntempl ComboBadge(name, value string) {\n\t\u003cdiv class=\"ml-2 badge badge-neutral p-1 text-nowrap select-none\"\u003e\n\t\t\u003cinput type=\"hidden\" name={ name } value={ value }/\u003e\n\t\t\u003cspan\u003e{ value }\u003c/span\u003e\n\t\t\u003cbutton\n\t\t\tonclick=\"uncheckAndRemoveBadge(event)\"\n\t\t\tclass=\"ml-1 btn btn-xs btn-circle btn-ghost\"\n\t\t\u003e\n\t\t\t@crossIcon()\n\t\t\u003c/button\u003e\n\t\t\u003cscript\u003e\n\t\t\tfunction uncheckAndRemoveBadge(evt) {\n\t\t\t\tvar div = evt.target.parentElement\n\t\t\t\twhile (div.nodeName !== \"DIV\") {\n\t\t\t\t\tdiv = div.parentElement\n\t\t\t\t}\n\t\t\t\tlet input = div.querySelector(\"input[type=hidden]\")\n\t\t\t\tlet name = input.getAttribute(\"name\")\n\t\t\t\tlet labelText = input.value\n\n\t\t\t\tlet details = div.closest(\"details\")\n\t\t\t\tlet ul = details.querySelector(\"ul\")\n\t\t\t\tlet checkboxes = ul.querySelectorAll(`input[name=\"${name}\"]`)\n\t\t\t\tcheckboxes.forEach((cb) =\u003e {\n\t\t\t\t\tif (cb.checked) {\n\t\t\t\t\t\tlet label = cb.parentElement\n\t\t\t\t\t\tlabel.querySelectorAll(\"span.label-text\").forEach((el) =\u003e {\n\t\t\t\t\t\t\tif (el.innerHTML === labelText) {\n\t\t\t\t\t\t\t\tcb.checked = false\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\tdiv.remove()\n\t\t\t}\n\t\t\u003c/script\u003e\n\t\u003c/div\u003e\n}\n\ntempl crossIcon() {\n\t\u003csvg\n\t\tclass=\"h-3 w-3\"\n\t\tviewBox=\"0 0 25 25\"\n\t\tversion=\"1.1\"\n\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\txmlns:xlink=\"http://www.w3.org/1999/xlink\"\n\t\txmlns:sketch=\"http://www.bohemiancoding.com/sketch/ns\"\n\t\u003e\n\t\t\u003cg stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\" sketch:type=\"MSPage\"\u003e\n\t\t\t\u003cg class=\"fill-base-content\" id=\"Icon-Set-Filled\" sketch:type=\"MSLayerGroup\" transform=\"translate(-469.000000, -1041.000000)\"\u003e\n\t\t\t\t\u003cpath d=\"M487.148,1053.48 L492.813,1047.82 C494.376,1046.26 494.376,1043.72 492.813,1042.16 C491.248,1040.59 488.712,1040.59 487.148,1042.16 L481.484,1047.82 L475.82,1042.16 C474.257,1040.59 471.721,1040.59 470.156,1042.16 C468.593,1043.72 468.593,1046.26 470.156,1047.82 L475.82,1053.48 L470.156,1059.15 C468.593,1060.71 468.593,1063.25 470.156,1064.81 C471.721,1066.38 474.257,1066.38 475.82,1064.81 L481.484,1059.15 L487.148,1064.81 C488.712,1066.38 491.248,1066.38 492.813,1064.81 C494.376,1063.25 494.376,1060.71 492.813,1059.15 L487.148,1053.48\" sketch:type=\"MSShapeGroup\"\u003e\u003c/path\u003e\n\t\t\t\u003c/g\u003e\n\t\t\u003c/g\u003e\n\t\u003c/svg\u003e\n}\n```"
    },
    {
      "name": "date_picker",
      "code": "```go\ntype DatePickerProps struct {\n\tYear        int\n\tMonth       int\n\tSelected    time.Time\n\tStartOfWeek time.Weekday\n}\n\nfunc (props DatePickerProps) Days() []time.Time {\n\tdays := make([]time.Time, 0, 31)\n\tnow := time.Now().UTC()\n\tstart := time.Date(props.Year, time.Month(props.Month), 1, 0, 0, 0, 0, now.Location())\n\tend := start.AddDate(0, 1, -1)\n\tfor end.Weekday() != props.StartOfWeek {\n\t\tend = end.AddDate(0, 0, 1)\n\t}\n\tend = end.AddDate(0, 0, -1)\n\n\tfor start.Weekday() != props.StartOfWeek {\n\t\tstart = start.AddDate(0, 0, -1)\n\t}\n\tfor !start.After(end) {\n\t\tdays = append(days, start)\n\t\tstart = start.AddDate(0, 0, 1)\n\t}\n\treturn days\n}\n\nfunc (props DatePickerProps) Months() []time.Time {\n\tmonths := make([]time.Time, 12)\n\tfor i := 1; i \u003c= 12; i++ {\n\t\tdt := time.Date(props.Year, time.Month(i), 1, 0, 0, 0, 0, time.Now().Location())\n\t\tmonths[i-1] = dt\n\t}\n\treturn months\n}\n\ntempl DatePicker(props DatePickerProps) {\n\t{{ utcNow := time.Now().UTC() }}\n\t{{ days := props.Days() }}\n\t\u003cdiv\n\t\tname=\"datepicker-div\"\n\t\tclass=\"flex flex-col space-y-1 w-[300px] h-[405px]\"\n\t\u003e\n\t\t\u003cdiv class=\"flex space-x-1\"\u003e\n\t\t\t\u003cbutton\n\t\t\t\thx-get={ fmt.Sprintf(\"/datepicker?year=%d\u0026month=%d\", props.Year, props.Month-1) }\n\t\t\t\thx-target=\"div[name=datepicker-div]\"\n\t\t\t\thx-swap=\"outerHTML\"\n\t\t\t\tclass=\"btn btn-square btn-sm\"\n\t\t\t\u003e\n\t\t\t\t\u003csvg class=\"h-3 w-3\" viewBox=\"-5.5 0 26 26\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xmlns:sketch=\"http://www.bohemiancoding.com/sketch/ns\"\u003e\n\t\t\t\t\t\u003cg id=\"Page-1\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\" sketch:type=\"MSPage\"\u003e\n\t\t\t\t\t\t\u003cg class=\"fill-base-content\" id=\"Icon-Set-Filled\" sketch:type=\"MSLayerGroup\" transform=\"translate(-423.000000, -1196.000000)\"\u003e\n\t\t\t\t\t\t\t\u003cpath d=\"M428.115,1209 L437.371,1200.6 C438.202,1199.77 438.202,1198.43 437.371,1197.6 C436.541,1196.76 435.194,1196.76 434.363,1197.6 L423.596,1207.36 C423.146,1207.81 422.948,1208.41 422.985,1209 C422.948,1209.59 423.146,1210.19 423.596,1210.64 L434.363,1220.4 C435.194,1221.24 436.541,1221.24 437.371,1220.4 C438.202,1219.57 438.202,1218.23 437.371,1217.4 L428.115,1209\" id=\"chevron-left\" sketch:type=\"MSShapeGroup\"\u003e\u003c/path\u003e\n\t\t\t\t\t\t\u003c/g\u003e\n\t\t\t\t\t\u003c/g\u003e\n\t\t\t\t\u003c/svg\u003e\n\t\t\t\u003c/button\u003e\n\t\t\t\u003cdetails class=\"dropdown w-full max-w-[300px]\"\u003e\n\t\t\t\t\u003csummary class=\"btn btn-sm w-full\"\u003e{ fmt.Sprintf(\"%d\", props.Year) }\u003c/summary\u003e\n\t\t\t\t\u003cdiv\n\t\t\t\t\tclass={\n\t\t\t\t\t\t\"menu dropdown-content grid grid-cols-3 gap-1\",\n\t\t\t\t\t\t\"w-full max-w-[300px] p-1 bg-base-300 rounded-b-box\",\n\t\t\t\t\t}\n\t\t\t\t\thx-get={ fmt.Sprintf(\"/datepicker/yearpicker?year=%d\", props.Year) }\n\t\t\t\t\thx-trigger=\"datePickerDropdownClosed from:body\"\n\t\t\t\t\u003e\n\t\t\t\t\t@DatePickerYearPicker(props)\n\t\t\t\t\u003c/div\u003e\n\t\t\t\t\u003cscript\u003e\n                    ((details)=\u003e{\n                        details.querySelector(\"summary\").addEventListener(\"click\", (evt) =\u003e {\n                            if (details.hasAttribute(\"open\")) {\n                                    let event = new Event(\"datePickerDropdownClosed\");\n                                    document.querySelector(\"body\").dispatchEvent(event);\n                                }\n                        })\n                    })(document.currentScript.parentElement)\n                \u003c/script\u003e\n\t\t\t\u003c/details\u003e\n\t\t\t\u003cbutton\n\t\t\t\thx-get={ fmt.Sprintf(\"/datepicker?year=%d\u0026month=%d\", props.Year, props.Month+1) }\n\t\t\t\thx-target=\"div[name=datepicker-div]\"\n\t\t\t\thx-swap=\"outerHTML\"\n\t\t\t\tclass=\"btn btn-square btn-sm\"\n\t\t\t\u003e\n\t\t\t\t\u003csvg class=\"h-3 w-3\" viewBox=\"-5.5 0 26 26\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xmlns:sketch=\"http://www.bohemiancoding.com/sketch/ns\"\u003e\n\t\t\t\t\t\u003cg id=\"Page-1\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\" sketch:type=\"MSPage\"\u003e\n\t\t\t\t\t\t\u003cg class=\"fill-base-content\" id=\"Icon-Set-Filled\" sketch:type=\"MSLayerGroup\" transform=\"translate(-474.000000, -1196.000000)\"\u003e\n\t\t\t\t\t\t\t\u003cpath d=\"M488.404,1207.36 L477.637,1197.6 C476.806,1196.76 475.459,1196.76 474.629,1197.6 C473.798,1198.43 473.798,1199.77 474.629,1200.6 L483.885,1209 L474.629,1217.4 C473.798,1218.23 473.798,1219.57 474.629,1220.4 C475.459,1221.24 476.806,1221.24 477.637,1220.4 L488.404,1210.64 C488.854,1210.19 489.052,1209.59 489.015,1209 C489.052,1208.41 488.854,1207.81 488.404,1207.36\" id=\"chevron-right\" sketch:type=\"MSShapeGroup\"\u003e\u003c/path\u003e\n\t\t\t\t\t\t\u003c/g\u003e\n\t\t\t\t\t\u003c/g\u003e\n\t\t\t\t\u003c/svg\u003e\n\t\t\t\u003c/button\u003e\n\t\t\u003c/div\u003e\n\t\t\u003cdiv class=\"grid grid-cols-7 gap-1 text-sm text-base-content/75\"\u003e\n\t\t\tif props.StartOfWeek == time.Sunday {\n\t\t\t\t\u003cspan class=\"text-center\"\u003eSu\u003c/span\u003e\n\t\t\t}\n\t\t\t\u003cspan class=\"text-center\"\u003eMo\u003c/span\u003e\n\t\t\t\u003cspan class=\"text-center\"\u003eTu\u003c/span\u003e\n\t\t\t\u003cspan class=\"text-center\"\u003eWe\u003c/span\u003e\n\t\t\t\u003cspan class=\"text-center\"\u003eTh\u003c/span\u003e\n\t\t\t\u003cspan class=\"text-center\"\u003eFr\u003c/span\u003e\n\t\t\t\u003cspan class=\"text-center\"\u003eSa\u003c/span\u003e\n\t\t\tif props.StartOfWeek == time.Monday {\n\t\t\t\t\u003cspan class=\"text-center\"\u003eSu\u003c/span\u003e\n\t\t\t}\n\t\t\u003c/div\u003e\n\t\t\u003cdiv\n\t\t\tclass=\"grid grid-cols-7 gap-1\"\n\t\t\u003e\n\t\t\t@DatePickerInput(props.Selected)\n\t\t\tfor _, d := range days {\n\t\t\t\t\u003cbutton\n\t\t\t\t\tname=\"datepicker-day-btn\"\n\t\t\t\t\tclass={\n\t\t\t\t\t\t\"btn btn-ghost btn-square bg-base-100 border shadow-md shadow-base-300 h-10 w-10 p-3\",\n\t\t\t\t\t\ttempl.KV(\"text-primary\", d.Year() == utcNow.Year() \u0026\u0026 d.Month() == utcNow.Month() \u0026\u0026 utcNow.Day() == d.Day()),\n\t\t\t\t\t\ttempl.KV(\"btn-neutral\", d.Month() != time.Month(props.Month)),\n\t\t\t\t\t\ttempl.KV(\"border-primary bg-base-300\", !props.Selected.IsZero() \u0026\u0026 d.Day() == props.Selected.Day()),\n\t\t\t\t\t}\n\t\t\t\t\thx-post={ \"/datepicker/select?date=\" + d.Format(\"2006-01-02\") }\n\t\t\t\t\thx-target=\"#datepicker-input\"\n\t\t\t\t\thx-swap=\"outerHTML\"\n\t\t\t\t\tif d.Month() != time.Month(props.Month) {\n\t\t\t\t\t\tdisabled\n\t\t\t\t\t}\n\t\t\t\t\u003e\n\t\t\t\t\tif d.Day() == 1 {\n\t\t\t\t\t\t{ d.Format(\"Jan \") }\n\t\t\t\t\t}\n\t\t\t\t\t{ d.Format(\"2\") }\n\t\t\t\t\u003c/button\u003e\n\t\t\t}\n\t\t\t\u003cscript\u003e\n            function addDayButtonEventHandler() {\n                document.querySelectorAll(\"button[name=datepicker-day-btn]\").forEach((btn) =\u003e {\n                    btn.addEventListener(\"click\", () =\u003e {\n                        document.querySelectorAll(\"button[name=datepicker-day-btn]\").forEach((el) =\u003e {\n                            el.classList.remove(\"border-primary\", \"bg-base-300\")\n                        })\n                        btn.classList.add(\"border-primary\", \"bg-base-300\")\n                    })\n                })\n            }\n            document.addEventListener(\"htmx:afterSettle\", () =\u003e {\n                addDayButtonEventHandler();\n            })\n            document.addEventListener(\"DOMContentLoaded\", () =\u003e {\n                addDayButtonEventHandler();\n            })\n            \u003c/script\u003e\n\t\t\u003c/div\u003e\n\t\u003c/div\u003e\n}\n\ntempl DatePickerInput(d time.Time) {\n\t\u003cinput id=\"datepicker-input\" type=\"hidden\" name=\"date\" value={ d.Format(\"2006-01-02\") }/\u003e\n}\n\ntempl DatePickerYearPicker(props DatePickerProps) {\n\t{{ utcNow := time.Now().UTC() }}\n\tfor i := range 12 {\n\t\t\u003cbutton\n\t\t\tclass=\"btn btn-sm border\"\n\t\t\thx-get={ fmt.Sprintf(\"/datepicker/monthpicker?year=%d\", props.Year-(12-i)) }\n\t\t\thx-target=\"closest div\"\n\t\t\u003e\n\t\t\t{ fmt.Sprintf(\"%d\", props.Year-(12-i)) }\n\t\t\u003c/button\u003e\n\t}\n\t\u003cbutton\n\t\tclass=\"btn btn-sm border col-span-3\"\n\t\thx-get={ fmt.Sprintf(\"/datepicker/monthpicker?year=%d\", utcNow.Year()) }\n\t\thx-target=\"closest div\"\n\t\u003e\n\t\t{ fmt.Sprintf(\"%d\", utcNow.Year()) }\n\t\u003c/button\u003e\n}\n\ntempl DatePickerMonthPicker(props DatePickerProps) {\n\t{{ months := props.Months() }}\n\tfor _, m := range months {\n\t\t\u003cbutton\n\t\t\tclass={\n\t\t\t\t\"btn btn-sm border\",\n\t\t\t\ttempl.KV(\"border-primary\", m.Month() == time.Month(props.Month)),\n\t\t\t}\n\t\t\thx-get={ fmt.Sprintf(\"/datepicker?year=%d\u0026month=%d\", props.Year, m.Month()) }\n\t\t\thx-target=\"div[name=datepicker-div]\"\n\t\t\thx-swap=\"outerHTML\"\n\t\t\u003e\n\t\t\t{ m.Format(\"Jan\") }\n\t\t\u003c/button\u003e\n\t}\n}\n```"
    },
    {
      "name": "file_input",
      "code": "```go\ntype FileInputProps struct {\n\tID              string\n\tType            string // defaults to \"text\"\n\tLabel           string\n\tName            string\n\tValue           string\n\tPlaceholder     string\n\tErr             string\n\tAttrs           templ.Attributes\n\tClass           string\n\tIcon            templ.Component\n\tDisabled        bool\n\tDisabledMessage string\n\tRequired        bool\n}\n\ntempl FileInput(props FileInputProps) {\n\t\u003cdiv\n\t\thx-target={ fmt.Sprintf(\"#%s-error\", props.Name) }\n\t\thx-swap=\"outerHTML\"\n\t\tclass=\"w-full\"\n\t\u003e\n\t\t\u003clabel class=\"form-control w-full pb-2\"\u003e\n\t\t\tif props.Label != \"\" {\n\t\t\t\t\u003cdiv class=\"label pr-2\"\u003e\n\t\t\t\t\t\u003cspan class=\"label-text\"\u003e{ props.Label }\u003c/span\u003e\n\t\t\t\t\u003c/div\u003e\n\t\t\t}\n\t\t\t\u003cdiv\n\t\t\t\tid={ props.Name + \"-container\" }\n\t\t\t\tclass={\n\t\t\t\t\t\"relative !px-0 bg-transparent w-full flex items-center flex-grow\",\n\t\t\t\t\ttempl.KV(\"!pl-3\", props.Icon != nil),\n\t\t\t\t}\n\t\t\t\u003e\n\t\t\t\t\u003cinput\n\t\t\t\t\t{ props.Attrs... }\n\t\t\t\t\ttype=\"file\"\n\t\t\t\t\tname={ props.Name }\n\t\t\t\t\tclass={\n\t\t\t\t\t\t\"w-full file-input\",\n\t\t\t\t\t\ttempl.KV(\"input-error\", props.Err != \"\"),\n\t\t\t\t\t\tprops.Class,\n\t\t\t\t\t}\n\t\t\t\t\tvalue={ props.Value }\n\t\t\t\t/\u003e\n\t\t\t\t\u003cscript\u003e\n\t\t\t\t\tdocument.addEventListener(\"htmx:afterRequest\", (evt) =\u003e {\n\t\t\t\t\t\tlet name = evt.detail.elt.getAttribute(\"name\")\n\t\t\t\t\t\tlet div = document.getElementById(name + \"-div\")\n\t\t\t\t\t\tif (div === null) {\n\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet inp = div.querySelector(\"input[name=\" + name + \"]\")\n\t\t\t\t\t\tif (200 \u003c= evt.detail.xhr.status \u0026\u0026 evt.detail.xhr.status \u003c 300) {\n\t\t\t\t\t\t\tif (inp.classList.contains(\"input-error\")) {\n\t\t\t\t\t\t\t\tinp.classList.toggle(\"input-error\")\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (!inp.classList.contains(\"input-error\")) {\n\t\t\t\t\t\t\t\tinp.classList.toggle(\"input-error\")\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\u003c/script\u003e\n\t\t\t\u003c/div\u003e\n\t\t\u003c/label\u003e\n\t\u003c/div\u003e\n}\n```",
      "daisy_ui_url": "https://daisyui.com/components/file-input"
    },
    {
      "name": "form",
      "code": "```go\ntempl Form(attrs templ.Attributes) {\n\t\u003cform { attrs... }\u003e\n\t\t{ children... }\n\t\u003c/form\u003e\n}\n```"
    },
    {
      "name": "input",
      "code": "```go\ntype InputProps struct {\n\tID              string\n\tType            string // defaults to \"text\"\n\tLabel           string\n\tName            string\n\tValue           string\n\tPlaceholder     string\n\tErr             string\n\tAttrs           templ.Attributes\n\tClass           string\n\tIcon            templ.Component\n\tDisabled        bool\n\tDisabledMessage string\n\tRequired        bool\n}\n\ntempl Input(props InputProps) {\n\t\u003cdiv\n\t\tid={ fmt.Sprintf(\"%s-div\", props.Name) }\n\t\thx-target={ fmt.Sprintf(\"#%s-error\", props.Name) }\n\t\thx-swap=\"innerHTML\"\n\t\tclass=\"w-full\"\n\t\u003e\n\t\t\u003clabel class={ \"form-control w-full\", }\u003e\n\t\t\tif props.Label != \"\" {\n\t\t\t\t\u003cdiv class=\"py-1 pr-2\"\u003e\n\t\t\t\t\t\u003cspan class=\"label-text leading-4\"\u003e{ props.Label }\u003c/span\u003e\n\t\t\t\t\u003c/div\u003e\n\t\t\t}\n\t\t\t\u003cdiv\n\t\t\t\tclass={\n\t\t\t\t\t\"relative input !px-0 bg-transparent w-full flex items-center flex-grow\",\n\t\t\t\t\ttempl.KV(\"!pl-3\", props.Icon != nil),\n\t\t\t\t\ttempl.KV(\"input-error\", props.Err != \"\"),\n\t\t\t\t\ttempl.KV(\"pb-1\", props.Label != \"\"),\n\t\t\t\t\ttempl.KV(\"tooltip tooltip-top\", props.DisabledMessage != \"\"),\n\t\t\t\t\tprops.Class,\n\t\t\t\t}\n\t\t\t\tif props.Disabled \u0026\u0026 props.DisabledMessage != \"\" {\n\t\t\t\t\tdata-tip={ props.DisabledMessage }\n\t\t\t\t}\n\t\t\t\u003e\n\t\t\t\tif props.Icon != nil {\n\t\t\t\t\t\u003cdiv class=\"w-5 h-5\"\u003e\n\t\t\t\t\t\t@props.Icon\n\t\t\t\t\t\u003c/div\u003e\n\t\t\t\t}\n\t\t\t\t\u003cinput\n\t\t\t\t\t{ props.Attrs... }\n\t\t\t\t\tif props.ID != \"\" {\n\t\t\t\t\t\tid={ props.ID }\n\t\t\t\t\t}\n\t\t\t\t\tname={ props.Name }\n\t\t\t\t\tif props.Type != \"\" {\n\t\t\t\t\t\ttype={ props.Type }\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t}\n\t\t\t\t\tplaceholder={ props.Placeholder }\n\t\t\t\t\tclass={\n\t\t\t\t\t\t\"w-full focus:!outline-none !appearance-none px-2\",\n\t\t\t\t\t\ttempl.KV(\"input-error\", props.Err != \"\"),\n\t\t\t\t\t}\n\t\t\t\t\tvalue={ props.Value }\n\t\t\t\t\tif props.Disabled {\n\t\t\t\t\t\tdisabled\n\t\t\t\t\t}\n\t\t\t\t\tif props.Required {\n\t\t\t\t\t\trequired\n\t\t\t\t\t}\n\t\t\t\t/\u003e\n\t\t\t\t\u003cscript\u003e\n\t\t\t\t\tdocument.addEventListener(\"htmx:afterRequest\", (evt) =\u003e {\n\t\t\t\t\t\tlet name = evt.detail.elt.getAttribute(\"name\")\n\t\t\t\t\t\tlet div = document.getElementById(name + \"-div\")\n\t\t\t\t\t\tif (div === null) {\n\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet inp = div.querySelector(\"input[name=\" + name + \"]\")\n\t\t\t\t\t\tif (200 \u003c= evt.detail.xhr.status \u0026\u0026 evt.detail.xhr.status \u003c 300) {\n\t\t\t\t\t\t\tif (inp.classList.contains(\"input-error\")) {\n\t\t\t\t\t\t\t\tinp.classList.toggle(\"input-error\")\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (!inp.classList.contains(\"input-error\")) {\n\t\t\t\t\t\t\t\tinp.classList.toggle(\"input-error\")\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\u003c/script\u003e\n\t\t\t\u003c/div\u003e\n\t\t\t\u003cspan\n\t\t\t\tid={ fmt.Sprintf(\"%s-error\", props.Name) }\n\t\t\t\tclass=\"text-error h-4 text-xs pt-1\"\n\t\t\t\u003e\n\t\t\t\t{ props.Err }\n\t\t\t\u003c/span\u003e\n\t\t\u003c/label\u003e\n\t\u003c/div\u003e\n}\n```",
      "daisy_ui_url": "https://daisyui.com/components/input"
    },
    {
      "name": "radio",
      "code": "```go\ntype RadioProps struct {\n\tName   string\n\tValues map[string]string\n\tClass  string\n}\n\ntempl Radio(props RadioProps) {\n\tfor l, v := range props.Values {\n\t\t\u003cdiv class=\"form-control\"\u003e\n\t\t\t\u003clabel class=\"label cursor-pointer\"\u003e\n\t\t\t\t\u003cspan class=\"label-text\"\u003e{ l }\u003c/span\u003e\n\t\t\t\t\u003cinput\n\t\t\t\t\ttype=\"radio\"\n\t\t\t\t\tname={ props.Name }\n\t\t\t\t\tvalue={ v }\n\t\t\t\t\tclass={ \"radio\", props.Class }\n\t\t\t\t/\u003e\n\t\t\t\u003c/label\u003e\n\t\t\u003c/div\u003e\n\t}\n}\n```",
      "daisy_ui_url": "https://daisyui.com/components/radio"
    },
    {
      "name": "range",
      "code": "```go\ntype RangeProps struct {\n\tID    string\n\tLabel string\n\tName  string\n\tValue int\n\tMin   int\n\tMax   int\n\tStep  int\n\tClass string\n}\n\n// Note: usage requires alpine.js\ntempl Range(props RangeProps) {\n\t\u003cscript src=\"/static/js/alpine.js\" defer\u003e\u003c/script\u003e\n\t\u003cdiv class=\"form-control\"\u003e\n\t\t\u003clabel\n\t\t\tclass=\"label space-x-1\"\n\t\t\tx-data={ fmt.Sprintf(\"{ value: %d }\", props.Value) }\n\t\t\u003e\n\t\t\tif props.Label != \"\" {\n\t\t\t\t\u003cspan\u003e{ props.Label }\u003c/span\u003e\n\t\t\t}\n\t\t\t\u003cinput\n\t\t\t\ttype=\"range\"\n\t\t\t\tif props.ID != \"\" {\n\t\t\t\t\tid={ props.ID }\n\t\t\t\t}\n\t\t\t\tname={ props.Name }\n\t\t\t\tmin={ fmt.Sprintf(\"%d\", props.Min) }\n\t\t\t\tmax={ fmt.Sprintf(\"%d\", props.Max) }\n\t\t\t\tx-model=\"value\"\n\t\t\t\tclass={ \"range\", props.Class }\n\t\t\t\tstep={ fmt.Sprintf(\"%d\", props.Step) }\n\t\t\t/\u003e\n\t\t\t\u003cdiv x-text=\"value\" class=\"w-full max-w-7\"\u003e\u003c/div\u003e\n\t\t\u003c/label\u003e\n\t\u003c/div\u003e\n}\n```",
      "daisy_ui_url": "https://daisyui.com/components/range"
    },
    {
      "name": "rating",
      "code": "```go\ntype RatingProps struct {\n\tName  string\n\tMin   int\n\tMax   int\n\tClass string\n\tValue int\n}\n\ntempl Rating(props RatingProps) {\n\t\u003cdiv class=\"rating\"\u003e\n\t\tfor i := props.Min; i \u003c= props.Max; i++ {\n\t\t\tif i == 0 {\n\t\t\t\t\u003cinput\n\t\t\t\t\ttype=\"radio\"\n\t\t\t\t\tname={ props.Name }\n\t\t\t\t\tvalue={ fmt.Sprintf(\"%d\", i) }\n\t\t\t\t\tclass=\"rating-hidden\"\n\t\t\t\t/\u003e\n\t\t\t} else {\n\t\t\t\t\u003cinput\n\t\t\t\t\ttype=\"radio\"\n\t\t\t\t\tname={ props.Name }\n\t\t\t\t\tvalue={ fmt.Sprintf(\"%d\", i) }\n\t\t\t\t\tclass={ \"mask mask-star-2 bg-yellow-400\", props.Class }\n\t\t\t\t\tif i+1 == props.Max {\n\t\t\t\t\t\tchecked=\"checked\"\n\t\t\t\t\t}\n\t\t\t\t/\u003e\n\t\t\t}\n\t\t}\n\t\u003c/div\u003e\n}\n\ntempl RatingDisplay(props RatingProps) {\n\t\u003cdiv class=\"rating\"\u003e\n\t\tfor i := props.Min; i \u003c= props.Max; i++ {\n\t\t\tif i == 0 {\n\t\t\t\t\u003cinput\n\t\t\t\t\ttype=\"radio\"\n\t\t\t\t\tname={ props.Name }\n\t\t\t\t\tvalue={ fmt.Sprintf(\"%d\", i) }\n\t\t\t\t\tclass=\"rating-hidden cursor-default\"\n\t\t\t\t\tdisabled\n\t\t\t\t/\u003e\n\t\t\t} else {\n\t\t\t\t\u003cinput\n\t\t\t\t\ttype=\"radio\"\n\t\t\t\t\tname={ props.Name }\n\t\t\t\t\tvalue={ fmt.Sprintf(\"%d\", i) }\n\t\t\t\t\tclass={ \"mask mask-star-2 bg-accent cursor-default\", props.Class }\n\t\t\t\t\tif i == props.Value {\n\t\t\t\t\t\tchecked=\"checked\"\n\t\t\t\t\t}\n\t\t\t\t\tdisabled\n\t\t\t\t/\u003e\n\t\t\t}\n\t\t}\n\t\u003c/div\u003e\n}\n```",
      "daisy_ui_url": "https://daisyui.com/components/rating"
    },
    {
      "name": "select",
      "code": "```go\ntype SelectProps struct {\n\tID      string\n\tLabel   string\n\tName    string\n\tOptions []SelectOption\n\tAttrs   templ.Attributes\n\tClass   string\n}\n\ntype SelectOption struct {\n\tLabel    string\n\tValue    string\n\tSelected bool\n\tDisabled bool\n}\n\ntempl Select(props SelectProps) {\n\t\u003clabel\n\t\tclass={ \"form-control\", templ.KV(\"pb-2\", props.Label != \"\") }\n\t\u003e\n\t\tif props.Label != \"\" {\n\t\t\t\u003cdiv class=\"label pr-2\"\u003e\n\t\t\t\t\u003cspan class=\"label-text\"\u003e{ props.Label }\u003c/span\u003e\n\t\t\t\u003c/div\u003e\n\t\t}\n\t\t\u003cselect\n\t\t\tif props.ID != \"\" {\n\t\t\t\tid={ props.ID }\n\t\t\t}\n\t\t\tname={ props.Name }\n\t\t\tclass={ \"select\", props.Class }\n\t\t\t{ props.Attrs... }\n\t\t\u003e\n\t\t\t@SelectOptions(props.Options)\n\t\t\u003c/select\u003e\n\t\u003c/label\u003e\n}\n\ntempl SelectOptions(options []SelectOption) {\n\tfor i := range options {\n\t\t\u003coption\n\t\t\tif options[i].Selected {\n\t\t\t\tselected\n\t\t\t}\n\t\t\tif options[i].Disabled {\n\t\t\t\tdisabled\n\t\t\t}\n\t\t\tvalue={ options[i].Value }\n\t\t\u003e\n\t\t\t{ options[i].Label }\n\t\t\u003c/option\u003e\n\t}\n}\n```",
      "daisy_ui_url": "https://daisyui.com/components/select"
    },
    {
      "name": "textarea",
      "code": "```go\ntype TextareaProps struct {\n\tID          string\n\tLabel       string\n\tName        string\n\tPlaceholder string\n\tValue       string\n\tRows        int\n\tErr         string\n\tClass       string\n\tAttrs       templ.Attributes\n}\n\ntempl Textarea(props TextareaProps) {\n\t\u003clabel class=\"form-control\"\u003e\n\t\tif props.Label != \"\" {\n\t\t\t\u003cdiv class=\"label\"\u003e\n\t\t\t\t\u003cspan class=\"label-text\"\u003e{ props.Label }\u003c/span\u003e\n\t\t\t\u003c/div\u003e\n\t\t}\n\t\t\u003ctextarea\n\t\t\t{ props.Attrs... }\n\t\t\tif props.ID != \"\" {\n\t\t\t\tid={ props.ID }\n\t\t\t}\n\t\t\tname={ props.Name }\n\t\t\tplaceholder={ props.Placeholder }\n\t\t\tclass={\n\t\t\t\t\"textarea\",\n\t\t\t\tprops.Class,\n\t\t\t\ttempl.KV(\"textarea-error\", props.Err != \"\"),\n\t\t\t}\n\t\t\tif props.Rows \u003e 0 {\n\t\t\t\trows={ fmt.Sprintf(\"%d\", props.Rows) }\n\t\t\t} else {\n\t\t\t\trows=\"3\"\n\t\t\t}\n\t\t\u003e\n\t\t\t{ props.Value }\n\t\t\u003c/textarea\u003e\n\t\t\u003cdiv class=\"label h-6 !p-0\"\u003e\n\t\t\t\u003cspan class=\"label-text-alt text-error\"\u003e{ props.Err }\u003c/span\u003e\n\t\t\u003c/div\u003e\n\t\u003c/label\u003e\n}\n```",
      "daisy_ui_url": "https://daisyui.com/components/textarea"
    },
    {
      "name": "toggle",
      "code": "```go\ntype ToggleProps struct {\n\tID        string\n\tBefore    string\n\tAfter     string\n\tName      string\n\tChecked   bool\n\tClass     string\n\tHighlight bool\n\tAttrs     templ.Attributes\n}\n\ntempl Toggle(props ToggleProps) {\n\t\u003cdiv class=\"form-control\"\u003e\n\t\t\u003clabel class=\"label cursor-pointer space-x-2\"\u003e\n\t\t\t\u003cspan\n\t\t\t\tclass={\n\t\t\t\t\t\"label-text\",\n\t\t\t\t\ttempl.KV(\"text-primary\", props.Highlight \u0026\u0026 !props.Checked),\n\t\t\t\t}\n\t\t\t\u003e{ props.Before }\u003c/span\u003e\n\t\t\t\u003cinput\n\t\t\t\t{ props.Attrs... }\n\t\t\t\ttype=\"checkbox\"\n\t\t\t\tif props.ID != \"\" {\n\t\t\t\t\tid={ props.ID }\n\t\t\t\t}\n\t\t\t\tname={ props.Name }\n\t\t\t\tclass={ \"toggle\", props.Class }\n\t\t\t\tif props.Checked {\n\t\t\t\t\tchecked=\"checked\"\n\t\t\t\t}\n\t\t\t\tif props.Highlight {\n\t\t\t\t\tonclick=\"toggler(event)\"\n\t\t\t\t}\n\t\t\t/\u003e\n\t\t\t\u003cspan\n\t\t\t\tclass={\n\t\t\t\t\t\"label-text\",\n\t\t\t\t\ttempl.KV(\"text-primary\", props.Highlight \u0026\u0026 props.Checked),\n\t\t\t\t}\n\t\t\t\u003e{ props.After }\u003c/span\u003e\n\t\t\u003c/label\u003e\n\t\tif props.Highlight {\n\t\t\t\u003cscript\u003e\n\t\t\tfunction toggler(evt) {\n\t\t\t\tevt.target.previousElementSibling.classList.toggle(\"text-primary\")\n\t\t\t\tevt.target.nextElementSibling.classList.toggle(\"text-primary\")\n\t\t\t}\n\t\t\u003c/script\u003e\n\t\t}\n\t\u003c/div\u003e\n}\n```",
      "daisy_ui_url": "https://daisyui.com/components/toggle"
    }
  ],
  "feedback": [
    {
      "name": "alert",
      "code": "```go\ntempl Alert(class string) {\n\t\u003cdiv role=\"alert\" class={ \"alert\", class }\u003e\n\t\t{ children... }\n\t\u003c/div\u003e\n}\n\ntempl AlertInfo(message string) {\n\t@Alert(\"alert-info\") {\n\t\t\u003csvg\n\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\tfill=\"none\"\n\t\t\tviewBox=\"0 0 24 24\"\n\t\t\tclass=\"stroke-info-content h-6 w-6 shrink-0\"\n\t\t\u003e\n\t\t\t\u003cpath\n\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\tstroke-width=\"2\"\n\t\t\t\td=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n\t\t\t\u003e\u003c/path\u003e\n\t\t\u003c/svg\u003e\n\t\t\u003cspan\u003e{ message }\u003c/span\u003e\n\t\t{ children... }\n\t}\n}\n\ntempl AlertSuccess(message string) {\n\t@Alert(\"alert-success\") {\n\t\t\u003csvg\n\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\tfill=\"none\"\n\t\t\tviewBox=\"0 0 24 24\"\n\t\t\tclass=\"stroke-success-content h-6 w-6 shrink-0\"\n\t\t\u003e\n\t\t\t\u003cpath\n\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\tstroke-width=\"2\"\n\t\t\t\td=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"\n\t\t\t\u003e\u003c/path\u003e\n\t\t\u003c/svg\u003e\n\t\t\u003cspan\u003e{ message }\u003c/span\u003e\n\t\t{ children... }\n\t}\n}\n\ntempl AlertWarning(message string) {\n\t@Alert(\"alert-warning\") {\n\t\t\u003csvg\n\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\tfill=\"none\"\n\t\t\tviewBox=\"0 0 24 24\"\n\t\t\tclass=\"stroke-warning-content h-6 w-6 shrink-0\"\n\t\t\u003e\n\t\t\t\u003cpath\n\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\tstroke-width=\"2\"\n\t\t\t\td=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\"\n\t\t\t\u003e\u003c/path\u003e\n\t\t\u003c/svg\u003e\n\t\t\u003cspan\u003e{ message }\u003c/span\u003e\n\t\t{ children... }\n\t}\n}\n\ntempl AlertError(message string) {\n\t@Alert(\"alert-error\") {\n\t\t\u003csvg\n\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\tfill=\"none\"\n\t\t\tviewBox=\"0 0 24 24\"\n\t\t\tclass=\"stroke-error-content h-6 w-6 shrink-0\"\n\t\t\u003e\n\t\t\t\u003cpath\n\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\tstroke-width=\"2\"\n\t\t\t\td=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\"\n\t\t\t\u003e\u003c/path\u003e\n\t\t\u003c/svg\u003e\n\t\t\u003cspan\u003e{ message }\u003c/span\u003e\n\t\t{ children... }\n\t}\n}\n```",
      "daisy_ui_url": "https://daisyui.com/components/alert"
    },
    {
      "name": "skeleton",
      "code": "```go\ntempl Skeleton() {\n\t\u003cdiv class=\"flex flex-col gap-4\"\u003e\n\t\t\u003cdiv class=\"skeleton h-32 w-full\"\u003e\u003c/div\u003e\n\t\t\u003cdiv class=\"skeleton h-4 w-28\"\u003e\u003c/div\u003e\n\t\t\u003cdiv class=\"skeleton h-4 w-full\"\u003e\u003c/div\u003e\n\t\t\u003cdiv class=\"skeleton h-4 w-full\"\u003e\u003c/div\u003e\n\t\u003c/div\u003e\n}\n```",
      "daisy_ui_url": "https://daisyui.com/components/skeleton"
    },
    {
      "name": "status",
      "code": "```go\ntype StatusProps struct {\n\tCode         int\n\tTitle        string\n\tDescription  string\n\tReturnButton ButtonProps\n}\n\ntempl Status(props StatusProps) {\n\t\u003csection class=\"grid min-h-dvh place-content-center px-4\"\u003e\n\t\t\u003cdiv class=\"text-center\"\u003e\n\t\t\t\u003ch1 class=\"text-9xl font-black text-neutral\"\u003e\n\t\t\t\t{ fmt.Sprintf(\"%d\", props.Code) }\n\t\t\t\u003c/h1\u003e\n\t\t\t\u003cp class=\"text-2xl font-bold tracking-tight text-base-content sm:text-4xl\"\u003e\n\t\t\t\t{ props.Title }\n\t\t\t\u003c/p\u003e\n\t\t\t\u003cp class=\"mt-4 text-neutral\"\u003e\n\t\t\t\t{ props.Description }\n\t\t\t\u003c/p\u003e\n\t\t\t\u003ca\n\t\t\t\t{ props.ReturnButton.Attrs... }\n\t\t\t\tclass=\"mt-4 btn btn-primary\"\n\t\t\t\u003e\n\t\t\t\t{ props.ReturnButton.Label }\n\t\t\t\u003c/a\u003e\n\t\t\u003c/div\u003e\n\t\u003c/section\u003e\n}\n```"
    },
    {
      "name": "toast",
      "code": "```go\ntype ToastProps struct {\n\tName       string\n\tToastClass string\n\tAlertClass string\n}\n\ntempl Toast(props ToastProps) {\n\t\u003cdiv name={ props.Name } class={ \"toast\", props.ToastClass }\u003e\n\t\t\u003cdiv class={ \"alert\", props.AlertClass }\u003e\n\t\t\t{ children... }\n\t\t\u003c/div\u003e\n\t\u003c/div\u003e\n}\n```",
      "daisy_ui_url": "https://daisyui.com/components/toast"
    },
    {
      "name": "tooltip",
      "code": "```go\ntype TooltipProps struct {\n\tTip   string\n\tClass string\n}\n\ntempl Tooltip(props TooltipProps) {\n\t\u003cdiv class={ \"tooltip\", props.Class } data-tip={ props.Tip }\u003e\n\t\t{ children... }\n\t\u003c/div\u003e\n}\n```",
      "daisy_ui_url": "https://daisyui.com/components/tooltip"
    }
  ],
  "layout": [
    {
      "name": "banner",
      "code": "```go\ntype BannerProps struct {\n\tTitle                 templ.Component\n\tDescription           string\n\tCallToAction          ButtonProps\n\tSecondaryCallToAction ButtonProps\n}\n\ntempl Banner(props BannerProps) {\n\t\u003csection\u003e\n\t\t\u003cdiv class=\"mx-auto max-w-screen-xl px-4 py-32 lg:flex lg:items-center\"\u003e\n\t\t\t\u003cdiv class=\"mx-auto max-w-xl text-center\"\u003e\n\t\t\t\t@props.Title\n\t\t\t\t\u003cp class=\"mt-4 sm:text-xl/relaxed\"\u003e\n\t\t\t\t\t{ props.Description }\n\t\t\t\t\u003c/p\u003e\n\t\t\t\t\u003cdiv class=\"mt-8 flex flex-wrap justify-center gap-4\"\u003e\n\t\t\t\t\t\u003ca\n\t\t\t\t\t\tclass=\"btn btn-primary\"\n\t\t\t\t\t\t{ props.CallToAction.Attrs... }\n\t\t\t\t\t\u003e\n\t\t\t\t\t\t{ props.CallToAction.Label }\n\t\t\t\t\t\u003c/a\u003e\n\t\t\t\t\t\u003ca\n\t\t\t\t\t\tclass=\"btn btn-neutral\"\n\t\t\t\t\t\t{ props.SecondaryCallToAction.Attrs... }\n\t\t\t\t\t\u003e\n\t\t\t\t\t\t{ props.SecondaryCallToAction.Label }\n\t\t\t\t\t\u003c/a\u003e\n\t\t\t\t\u003c/div\u003e\n\t\t\t\u003c/div\u003e\n\t\t\u003c/div\u003e\n\t\u003c/section\u003e\n}\n```"
    },
    {
      "name": "drawer",
      "code": "```go\ntempl Drawer(toggle templ.Component, sidebar templ.Component) {\n\t\u003cdiv class=\"drawer\"\u003e\n\t\t\u003cinput id=\"my-drawer\" type=\"checkbox\" class=\"drawer-toggle\"/\u003e\n\t\t\u003cdiv class=\"drawer-content\"\u003e\n\t\t\t\u003clabel for=\"my-drawer\" class=\"btn btn-primary drawer-button\"\u003e\n\t\t\t\t@toggle\n\t\t\t\u003c/label\u003e\n\t\t\t{ children... }\n\t\t\u003c/div\u003e\n\t\t\u003cdiv class=\"drawer-side\"\u003e\n\t\t\t\u003clabel for=\"my-drawer\" aria-label=\"close sidebar\" class=\"drawer-overlay\"\u003e\u003c/label\u003e\n\t\t\t\u003cul class=\"menu bg-base-200 text-base-content min-h-full w-80 p-4\"\u003e\n\t\t\t\t@sidebar\n\t\t\t\u003c/ul\u003e\n\t\t\u003c/div\u003e\n\t\u003c/div\u003e\n}\n```",
      "daisy_ui_url": "https://daisyui.com/components/drawer"
    },
    {
      "name": "footer",
      "code": "```go\ntype FooterProps struct {\n\tIcon        templ.Component\n\tName        string\n\tDescription string\n\tCopyright   string\n\tAnchors     []AnchorProps\n}\n\ntempl Footer(props FooterProps) {\n\t\u003cfooter class=\"footer bg-base-200 text-base-content p-10 mt-24\"\u003e\n\t\t{ children... }\n\t\u003c/footer\u003e\n\t\u003cfooter class=\"footer bg-base-200 text-base-content border-base-300 border-t px-10 py-4\"\u003e\n\t\t\u003caside class=\"grid-flow-col items-center\"\u003e\n\t\t\tif props.Icon != nil {\n\t\t\t\t\u003cdiv class=\"w-6 h-6\"\u003e\n\t\t\t\t\t@props.Icon\n\t\t\t\t\u003c/div\u003e\n\t\t\t}\n\t\t\t\u003cp\u003e\n\t\t\t\tif props.Copyright != \"\" {\n\t\t\t\t\t\u003cspan\u003e\u0026copy; { props.Copyright }\u003c/span\u003e\n\t\t\t\t}\n\t\t\t\t{ props.Name }\n\t\t\t\t\u003cbr/\u003e\n\t\t\t\t{ props.Description }\n\t\t\t\u003c/p\u003e\n\t\t\u003c/aside\u003e\n\t\t\u003cnav class=\"md:place-self-center md:justify-self-end\"\u003e\n\t\t\t\u003cdiv class=\"grid grid-flow-col gap-4\"\u003e\n\t\t\t\tfor _, anchor := range props.Anchors {\n\t\t\t\t\t@Anchor(anchor)\n\t\t\t\t}\n\t\t\t\u003c/div\u003e\n\t\t\u003c/nav\u003e\n\t\u003c/footer\u003e\n}\n\ntempl FooterNav(title string, links []AnchorProps) {\n\t\u003cnav\u003e\n\t\t\u003ch6 class=\"footer-title\"\u003e{ title }\u003c/h6\u003e\n\t\tfor _, link := range links {\n\t\t\t\u003ca { link.Attrs... } class=\"link link-hover\"\u003e{ link.Label }\u003c/a\u003e\n\t\t}\n\t\u003c/nav\u003e\n}\n```",
      "daisy_ui_url": "https://daisyui.com/components/footer"
    },
    {
      "name": "hero",
      "code": "```go\ntempl Hero(image string, reverse bool) {\n\t\u003cdiv class=\"hero bg-base-200 min-h-screen\"\u003e\n\t\t\u003cdiv\n\t\t\tclass={\n\t\t\t\t\"hero-content\",\n\t\t\t\t\"flex-col\",\n\t\t\t\ttempl.KV(\"xl:flex-row\", !reverse),\n\t\t\t\ttempl.KV(\"xl:flex-row-reverse\", reverse),\n\t\t\t}\n\t\t\u003e\n\t\t\tif image != \"\" {\n\t\t\t\t\u003cimg src={ image } class=\"max-w-sm rounded-lg shadow-2xl\"/\u003e\n\t\t\t}\n\t\t\t\u003cdiv\u003e\n\t\t\t\t{ children... }\n\t\t\t\u003c/div\u003e\n\t\t\u003c/div\u003e\n\t\u003c/div\u003e\n}\n```",
      "daisy_ui_url": "https://daisyui.com/components/hero"
    }
  ],
  "navigation": [
    {
      "name": "anchor",
      "code": "```go\ntype AnchorProps struct {\n\tHref      string\n\tLabel     string\n\tLeftIcon  templ.Component\n\tRightIcon templ.Component\n\tAttrs     templ.Attributes\n\tClass     string\n}\n\ntempl Anchor(props AnchorProps) {\n\t\u003ca\n\t\tif props.Href != \"\" {\n\t\t\thref={ templ.SafeURL(props.Href) }\n\t\t}\n\t\tclass={ \"group flex items-center cursor-pointer\", props.Class }\n\t\t{ props.Attrs... }\n\t\u003e\n\t\tif props.LeftIcon != nil {\n\t\t\t\u003cdiv class=\"inline-block mr-1\"\u003e\n\t\t\t\t@props.LeftIcon\n\t\t\t\u003c/div\u003e\n\t\t}\n\t\t{ props.Label }\n\t\tif props.RightIcon != nil {\n\t\t\t\u003cdiv class=\"inline-block ml-1\"\u003e\n\t\t\t\t@props.RightIcon\n\t\t\t\u003c/div\u003e\n\t\t}\n\t\u003c/a\u003e\n}\n```"
    },
    {
      "name": "breadcrumbs",
      "code": "```go\ntype BreadcrumbsProps []BreadcrumbsProp\n\ntype BreadcrumbsProp struct {\n\tLabel string\n\tAttrs templ.Attributes\n}\n\ntempl Breadcrumbs(props BreadcrumbsProps) {\n\t\u003cdiv class=\"breadcrumbs text-sm\"\u003e\n\t\t\u003cul\u003e\n\t\t\tfor i, prop := range props {\n\t\t\t\t\u003cli class=\"select-none\"\u003e\n\t\t\t\t\tif i \u003c len(props) - 1 {\n\t\t\t\t\t\t\u003ca { prop.Attrs... }\u003e{ prop.Label }\u003c/a\u003e\n\t\t\t\t\t} else {\n\t\t\t\t\t\t{ prop.Label }\n\t\t\t\t\t}\n\t\t\t\t\u003c/li\u003e\n\t\t\t}\n\t\t\u003c/ul\u003e\n\t\u003c/div\u003e\n}\n```",
      "daisy_ui_url": "https://daisyui.com/components/breadcrumbs"
    },
    {
      "name": "menu",
      "code": "```go\ntempl Menu() {\n\t\u003cul class=\"menu rounded-box bg-base-300\"\u003e\n\t\t{ children... }\n\t\u003c/ul\u003e\n}\n\ntempl MenuItem(label string, attrs templ.Attributes) {\n\t\u003cli\u003e\n\t\t\u003ca { attrs... }\u003e{ label }\u003c/a\u003e\n\t\t\u003cul\u003e\n\t\t\t{ children... }\n\t\t\u003c/ul\u003e\n\t\u003c/li\u003e\n}\n```",
      "daisy_ui_url": "https://daisyui.com/components/menu"
    },
    {
      "name": "pagination",
      "code": "```go\ntype PaginationProps struct {\n\tURL      string\n\tPage     int\n\tLow      int\n\tHigh     int\n\tMaxPages int\n}\n\ntempl Pagination(id string, props PaginationProps) {\n\t\u003cdiv id={ id }\u003e\n\t\t\u003c!-- paginated content goes here --\u003e\n\t\t{ children... }\n\t\t\u003c!-- --\u003e\n\t\t\u003cdiv class=\"join\"\u003e\n\t\t\t@PaginationButton(id, props.URL, 1, props.Page == 1) {\n\t\t\t\t@AnglesLeft()\n\t\t\t}\n\t\t\t@PaginationButton(id, props.URL, props.Page-1, props.Page == 1) {\n\t\t\t\t@ChevronLeft()\n\t\t\t}\n\t\t\tfor i := props.Low; i \u003c= props.High; i++ {\n\t\t\t\t@PaginationButton(id, props.URL, i+1, props.Page == i+1) {\n\t\t\t\t\t{ fmt.Sprintf(\"%d\", i+1) }\n\t\t\t\t}\n\t\t\t}\n\t\t\t@PaginationButton(id, props.URL, props.Page+1, props.Page == props.MaxPages) {\n\t\t\t\t@ChevronRight()\n\t\t\t}\n\t\t\t@PaginationButton(id, props.URL, props.MaxPages, props.Page == props.MaxPages) {\n\t\t\t\t@AnglesRight()\n\t\t\t}\n\t\t\u003c/div\u003e\n\t\u003c/div\u003e\n}\n\ntempl PaginationButton(id, url string, urlPage int, disabled bool) {\n\t\u003cbutton\n\t\tif url != \"\" {\n\t\t\thx-get={ fmt.Sprintf(\"%s?page=%d\", url, urlPage) }\n\t\t\thx-target={ fmt.Sprintf(\"#%s\", id) }\n\t\t\thx-swap=\"outerHTML\"\n\t\t}\n\t\tclass={\n\t\t\t\"join-item btn btn-square disabled:opacity-40\",\n\t\t\ttempl.KV(\"btn-disabled\", disabled),\n\t\t}\n\t\tif disabled {\n\t\t\tdisabled\n\t\t}\n\t\u003e\n\t\t{ children... }\n\t\u003c/button\u003e\n}\n\ntempl AnglesRight() {\n\t\u003csvg\n\t\tclass=\"w-4 h-4\"\n\t\tviewBox=\"0 0 24 24\"\n\t\tfill=\"none\"\n\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\u003e\n\t\t\u003cpath\n\t\t\td=\"M6 17L11 12L6 7M13 17L18 12L13 7\"\n\t\t\tclass=\"stroke-base-content\"\n\t\t\tstroke-width=\"2\"\n\t\t\tstroke-linecap=\"round\"\n\t\t\tstroke-linejoin=\"round\"\n\t\t\u003e\u003c/path\u003e\n\t\u003c/svg\u003e\n}\n\ntempl AnglesLeft() {\n\t\u003csvg\n\t\tclass=\"w-4 h-4\"\n\t\tviewBox=\"0 0 24 24\"\n\t\tfill=\"none\"\n\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\u003e\n\t\t\u003cpath\n\t\t\td=\"M18 17L13 12L18 7M11 17L6 12L11 7\"\n\t\t\tclass=\"stroke-base-content\"\n\t\t\tstroke-width=\"2\"\n\t\t\tstroke-linecap=\"round\"\n\t\t\tstroke-linejoin=\"round\"\n\t\t\u003e\u003c/path\u003e\n\t\u003c/svg\u003e\n}\n\ntempl ChevronRight() {\n\t\u003csvg\n\t\tclass=\"w-4 h-4\"\n\t\tviewBox=\"0 0 24 24\"\n\t\tfill=\"none\"\n\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\u003e\n\t\t\u003cpath\n\t\t\td=\"M9 6L15 12L9 18\"\n\t\t\tclass=\"stroke-base-content\"\n\t\t\tstroke-width=\"2\"\n\t\t\tstroke-linecap=\"round\"\n\t\t\tstroke-linejoin=\"round\"\n\t\t\u003e\u003c/path\u003e\n\t\u003c/svg\u003e\n}\n\ntempl ChevronLeft() {\n\t\u003csvg\n\t\tclass=\"w-4 h-4\"\n\t\tviewBox=\"0 0 24 24\"\n\t\tfill=\"none\"\n\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\u003e\n\t\t\u003cpath\n\t\t\td=\"M15 6L9 12L15 18\"\n\t\t\tclass=\"stroke-base-content\"\n\t\t\tstroke-width=\"2\"\n\t\t\tstroke-linecap=\"round\"\n\t\t\tstroke-linejoin=\"round\"\n\t\t\u003e\u003c/path\u003e\n\t\u003c/svg\u003e\n}\n```",
      "daisy_ui_url": "https://daisyui.com/components/pagination"
    },
    {
      "name": "steps",
      "code": "```go\ntempl Steps() {\n\t\u003cul class=\"steps\"\u003e\n\t\t{ children... }\n\t\u003c/ul\u003e\n}\n\ntype StepProps struct {\n\tLabel string\n\tDone  bool\n\tAttrs templ.Attributes\n}\n\ntempl Step(props StepProps) {\n\t\u003cli\n\t\tclass={ \"step\", templ.KV(\"step-primary\", props.Done) }\n\t\u003e\n\t\t\u003ca { props.Attrs... }\u003e{ props.Label }\u003c/a\u003e\n\t\u003c/li\u003e\n}\n```",
      "daisy_ui_url": "https://daisyui.com/components/steps"
    },
    {
      "name": "tabs",
      "code": "```go\ntype TabsProps struct {\n\tName         string\n\tClass        string\n\tTabs         []TabProps\n\tContentClass string\n}\n\ntype TabProps struct {\n\tLabel   string\n\tContent templ.Component\n}\n\ntempl Tabs(props TabsProps) {\n\t\u003cdiv role=\"tablist\" class={ \"tabs\", props.Class }\u003e\n\t\tfor i, tab := range props.Tabs {\n\t\t\t\u003cinput\n\t\t\t\ttype=\"radio\"\n\t\t\t\tname={ props.Name }\n\t\t\t\trole=\"tab\"\n\t\t\t\tclass=\"tab\"\n\t\t\t\taria-label={ tab.Label }\n\t\t\t\tif i == 0 {\n\t\t\t\t\tchecked=\"checked\"\n\t\t\t\t}\n\t\t\t/\u003e\n\t\t\t\u003cdiv class={ \"tab-content\", props.ContentClass }\u003e\n\t\t\t\t@tab.Content\n\t\t\t\u003c/div\u003e\n\t\t}\n\t\u003c/div\u003e\n}\n```",
      "daisy_ui_url": "https://daisyui.com/components/tab"
    }
  ]
}